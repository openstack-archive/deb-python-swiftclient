[tox]
envlist = py27,py34,py35,pypy,pep8
minversion = 2.0
skipsdist = True

[testenv]
usedevelop = True
install_command = {toxinidir}/tools/tox_install.sh {opts} {packages}
setenv =
  LANG=en_US.utf8
  VIRTUAL_ENV={envdir}
  BRANCH_NAME=master
  CLIENT_NAME=python-swiftclient
  CONSTRAINTS_FILE={env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt}

deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
       .[keystone]
commands = sh -c '(find . -not \( -type d -name .?\* -prune \) \
           \( -type d -name "__pycache__" -or -type f -name "*.py[co]" \) \
           -print0; find . -name "*.dbm*" -print0) | xargs -0 rm -rf'
           python setup.py testr --testr-args="{posargs}"
whitelist_externals = sh
passenv = SWIFT_* *_proxy

[testenv:pep8]
commands =
    flake8 swiftclient tests

[testenv:venv]
commands = {posargs}

[testenv:cover]
commands = python setup.py testr --coverage
           coverage report

[testenv:func]
setenv =
    {[testenv]setenv}
    OS_TEST_PATH=tests.functional
whitelist_externals =
    coverage
    rm
commands =
    python setup.py testr --coverage --testr-args="--concurrency=1"
    coverage report -m
    rm -f .coverage

[testenv:docs]
commands=
    python setup.py build_sphinx

[flake8]
# it's not a bug that we aren't using all of hacking, ignore:
# H101: Use TODO(NAME)
# H301: one import per line
# H306: imports not in alphabetical order (time, os)
# H401: docstring should not start with a space
# H403: multi line docstrings should end on a new line
# H404: multi line docstring should start without a leading new line
# H405: multi line docstring summary not separated with an empty line
ignore = H101,H301,H306,H401,H403,H404,H405
show-source = True
exclude = .venv,.tox,dist,doc,*egg

[testenv:bindep]
# Do not install any requirements. We want this to be fast and work even if
# system dependencies are missing, since it's used to tell you what system
# dependencies are missing! This also means that bindep must be installed
# separately, outside of the requirements files.
usedevelop = False
deps = bindep
commands = bindep test
